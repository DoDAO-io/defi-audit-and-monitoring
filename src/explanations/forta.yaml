- key: intro-to-forta
  title: Introduction to Forta
  shortTitle: Intro
  details: >+
    ### What is Forta

    Forta is a decentralized monitoring network that helps detect threats and
    anomalies on DeFi, NFT, governance, bridges, and other Web3 systems in
    real-time. Forta's monitoring network and bots help keep an eye on smart
    contracts so you can be sure they're running smoothly. Forta also has
    several features that make transaction monitoring easy and efficient.


    Forta is a network of independent node operators that scan all transactions
    and block-by-block state changes for outlier transactions and threats. When
    an issue is detected, node operators send alerts to subscribers of potential
    risks, which enables them to take action.  It is the first real-time
    detection network for the security & operational monitoring of blockchain
    activity. Forta offers real-time protection against potential risks and
    threats on the blockchain, so you can rest assured that your transactions
    are safe.


    ### Use Cases of Forta and detection bots

    - Forta bots can be used to monitor the contract  

    - Develop complex mitigation scripts that query the API for specific bots'
    alerts and automate smart contract operations based on the received alerts

    - Notify users of potential threats and governance changes in the dApp 

    - Build an extension to wallets such as Metamask to display warnings about a
    particular wallet address or smart contract users are about to interact
    with 

    - Users can run scan nodes to receive FORT tokens and ensuring consensus 

    - Analyze alerts from several blockchain projects and identify trends before
    making investment decisions as a financial analyst 

    - Machine learning can be used to develop high level detection bots which
    makes the monitor even more efficient 

    - Decide whether to provide coverage or process claims for a particular
    smart contract by analyzing its alerts to gauge its security as an insurance
    protocol


- key: example-of-a-bot
  shortTitle: Example
  details: |-
    Example

    Example

    Example
  title: Example of a Bot
- key: how-forta-works
  title: Working of Forta
  shortTitle: Working
  details: >
    ### How Forta works?

    Forta basically divided into four parts they are SCanner nodes, Detection
    bots, Assigner, and Analyzer.

    * **Scan node**
        Scan nodes run detection bots and are registered in a polygon smart contract. They use JSON-RPC to read blockchain data and pass it to detection bots. After processing, the bot sends findings to the scan node, which emits a signed report to the Analyser API. Scan nodes receive FORT rewards for high SLA and must stake FORT to prevent malicious behavior.

    * **Detection bot**
        Detection bots are an important part of blockchain security. They scan each block and transaction from a chain and perform custom logic to detect conditions. These data are provided by the scan nodes. Each detection bot should be registered in the bot registry smartcontract on polygon. It should be deployed in multiple scan nodes for redundancy and security. Detection bots should be able to make API calls. Detection bots can maintain internal state for anomaly detection. SDKâ€™s(software development kits) are provided for Typescript, Javascript, and Python for creating detection bots. The `handleTransaction` and `handleBlock` are two important functions in the detection bot.
        You can create detection bots using any language that supports gRPC. To prevent malicious behavior, these bots should stake FORT tokens. They should also execute in isolation, running as a Docker container on a dedicated docker network. Docker is a platform that uses OS-level virtualization software to help users develop, deploy and manage applications, running them in a Docker Container complete with all their relevant library dependencies. In order to learn more about docker refer: [Link](https://docs.docker.com/).

    * **Assigner**
        The assigner assigns and unassigns detection bots and scan nodes via a Dispatch smart contract on the polygon. It loads all the scanner and the bots constantly updating its database and decides what should be mapped to which node. All bots will run on six scan nodes meaning each bot will get the data from six scan nodes. This is done to maintain consensus security and availability of nodes. Currently, the assigner is centralized but it will eventually become decentralized.

    * **Analyzer**
        The Analyzer is the cloud-based component of Forta that allows for the sending of alerts to a private API. The scan nodes send the alerts to the private API, which then authenticates the scanner nodes, verifies that they are registered and staked, and validates the signatures on all artifacts sent from scanners. The Analyzer will also store alerts in a central database, as well as trigger notifications for users via Slack, Discord, Telegram, Email, or webhooks. When an alert is generated, a post request will be created via webhook. The Analyzer is currently centralized.
- key: why-Forta
  title: Why Forta
  shortTitle: Why Forta
  details: >-
    Defi protocols have been experiencing an increasing number of hacks in
    recent years. This is due to the increasing number of protocols making
    auditing and monitoring more difficult. To ensure the safety of users'
    funds, the emerging Defi protocols need more auditing.



    In January 2022, a wormhole protocol lost over $320 million worth of assets
    due to a hack, which highlights the importance of security in the growing
    Web3 economy. In the first quarter of 2022, over $1 billion was lost to
    hacks and exploits, some of which were not discovered until days after the
    initial attack. This highlights the need for real-time security and
    operational monitoring to quickly react to threats and prevent or minimize
    loss of funds.



    Forta is an auditing protocol that covers the issue of reliability by
    developing detection bots. These bots are assigned to six different scan
    nodes to maintain consensus and reliable information. To be a scan node, a
    stake must be provided and the ability to prove that every block has been
    scanned. If established service levels are not met, the node will be
    slashed.



    Forta is more flexible than other auditing protocols because it offers
    detection bots that can monitor the contract and uses machine learning for
    additional monitoring.
- key: fort-token
  title: FORT tokens
  shortTitle: FORT
  details: >
    # FORT token

    FORT is an ERC-20 token in the Ethereum network. (Address:
    `_0x41545f8b9472D758bB669ed8EaEEEcD7a9C4Ec29_`).


    To ensure the accuracy and integrity of the data provided by the network,
    Forta adopts a work token model, where node runners must stake FORT tokens
    in order to broadcast real-time security and operational data to the
    network, and anyone may stake FORT tokens in order to signal detection bot
    quality in the network.


    Fort Tokens are used especially for two cases.

    - **Node runners** : Node runners should stake FORT tokens in order to
    prevent malicious behavior. Since the staked FORT can be slashed if nodes
    fail to execute their assigned work or perform their work maliciously.

    - **Detection bot signaling** :FORT tokens are staked in detection bots
    signaling bot quality to the network.  Having fake or low-quality bots on
    the network makes it harder to find the best risk-detection offerings.
- key: prevent-hack-forta
  title: Forta's Prevention of Hack Attacks
  shortTitle: Prevention of hack
  details: >
    ### How Forta could have prevented million dollars hacks

    let's take a look at a real-world hack that occurred and how forta could
    have helped prevent it poly network is a protocol that enables cross-chain
    interoperability and sending assets across different blockchains in august
    of 2021 the poly network was exploited across multiple chains amounting to
    funds lost of up to 600 million us dollars the largest defy hack in history.
    The exploit took place over 184 blocks or a duration of about 40 minutes
    with forta runtime threat detection the exploit could have been flagged
    within seconds and mitigated to prevent any losses. Source:
    [link](https://en.wikipedia.org/wiki/Poly_Network_exploit#:~:text=They%20posted%20a%20Q%26A%20to,returned%20first%20on%20August%2011.).

    There is a function in the Victim protocol's contract that allows you to run
    cross-chain transactions it verifies that the transaction is from one of the
    authorized **bookkeepers** as set in the eth cross-chain data contract and
    then executes that transaction. Basically, the **bookkeeper** is an address
    that can make any transaction and it had a function modifier of onlyOwner.

    The hacker found an exploit here and carefully crafted an exploit
    transaction that invoked the setter function to change the **bookkeeper** to
    an address they controlled once assigned as the bookkeeper they could make
    transactions to withdraw any amount of funds.

    If we have deployed forta detection bots in the contract we can make logic
    to check that if there is a change in the **bookkeeper** immediately return
    findings which could create an alert.

    So instantly the contract can be paused other measures can be taken. This is
    very great because these detection bots can monitor 24/7. Using machine
    learning we can improvise these bots a lot.
